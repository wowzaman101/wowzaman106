// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/gofiber/fiber/v3"
	"log"
	"wowzaman106/config"
	"wowzaman106/infrastructure/server"
	"wowzaman106/internal/handler/gamehdl"
)

// Injectors from main.go:

func initialize() *dependencies {
	handler := gamehdl.New()
	app := server.New(handler)
	mainDependencies := &dependencies{
		server: app,
	}
	return mainDependencies
}

// main.go:

type dependencies struct {
	server *fiber.App
}

func main() {
	d := initialize()
	log.Printf("Server is running on port %s", config.Get().Server.Port)

	defer func() {
		if err := d.server.Shutdown(); err != nil {
			log.Printf("Error during shutdown: %s", err.Error())
		}
		log.Println("Server gracefully stopped")
	}()

	if err := d.server.Listen(":" + config.Get().Server.Port); err != nil {
		log.Fatalf("Failed to start server: %s", err.Error())
	}
}
